{"version":3,"sources":["../src/index.js"],"names":["AhaOAuthClient","constructor","client_id","client_secret","subdomain","options","axiosInstance","useSubdomain","timeout","requestDefaultHeaders","baseUrl","_axios","axios","create","_token","undefined","token","arguments","length","tokenChanged","authorizeUri","redirectUri","responseType","state","brandId","display","prompt","authUrl","console","log","request","config","uri","hostname","path","url","toString","post","data","method","authorize","code","querystring","stringify","grant_type","redirect_uri","r","access_token"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport querystring from 'querystring'\nimport URI from 'urijs'\n\nclass AhaOAuthClient {\n    constructor(client_id, client_secret, subdomain, options, axiosInstance) {\n\tthis.client_id = client_id\n\tthis.client_secret = client_secret\n\tthis.options = options || { useSubdomain: true, timeout: null }\n\tthis.subdomain = subdomain\n\tthis.requestDefaultHeaders = {}\n\tif (this.options.useSubdomain === false) {\n            this.requestDefaultHeaders['X-AHA-ACCOUNT'] = this.subdomain;\n            this.subdomain = 'secure';\n\t}\n\tthis.baseUrl = `https://${this.subdomain}.aha.io`\n\tthis._axios = axiosInstance || axios.create()\n\tthis._token = undefined\n    }\n\n    token (_token) {\n\tif (arguments.length === 0) { // get\n\t    return this._token\n\t}\n\tconst tokenChanged = this._token !== _token\n\tthis._token = _token\n    }\n\n    authorizeUri (redirectUri, options = { responseType: 'code', state: '', brandId: '', display: '', prompt: '' }) {\n\tlet authUrl = this.baseUrl + \"/oauth/authorize\" +\n\t    \"?response_type=\" + options.responseType + \n\t    \"&client_id=\"   + this.client_id + \n            \"&redirect_uri=\" + redirectUri + \n            \"&state=\" + options.state\n\tconsole.log(\"Auth URL is: \" + authUrl)\n\treturn authUrl\n    }\n\n    request (config) {\n\tlet uri = URI(this.baseUrl)\n\tif (uri.hostname() === '') {\n\t    uri = URI(this.baseUrl).path(config.url)\n\t}\n\treturn this._axios.request({\n\t    ...config,\n\t    url: uri.toString()\n\t})\n    }\n\n    post (url, data = undefined, config = {}) {\n\treturn this.request({ ...config, method: 'post', url, data })\n    }\n\n    async authorize({ code, redirectUri }, options = {}) {\n\tlet data = querystring.stringify({\n\t    code: code,\n\t    client_id: this.client_id,\n\t    client_secret: this.client_secret,\n\t    grant_type: 'authorization_code',\n\t    redirect_uri: redirectUri,\n\t    ...options })\n\tconst r = await this._axios.request({\n\t    method: 'post',\n\t    url: URI(this.baseUrl).path('/oauth/token').toString(),\n\t    data,\n\t})\n\tthis.token(r.data.access_token)\n    }\n    \n}\n\nexport default AhaOAuthClient\n"],"file":"index.js"}